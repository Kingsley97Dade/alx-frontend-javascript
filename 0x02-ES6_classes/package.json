{
  "type": "module",
  "name": "0x02-es6_classes",
  "version": "1.0.0",
  "description": "ECMAScript 2015 (ES6) introduced a new syntax for defining classes in JavaScript. Before ES6, JavaScript primarily used prototype-based inheritance. ES6 classes provide a more familiar and syntactically cleaner way to create constructor functions and handle inheritance.\r ES6 classes provide a more concise and intuitive syntax for working with object-oriented programming concepts in JavaScript. They are a syntactic sugar over the existing prototype-based inheritance model, making it easier to write and understand class-based code.\r Here are the key aspects of ES6 classes:\r 1. Class Declaration: In ES6, you can declare a class using the `class` keyword.\r 2. Constructor Method: The constructor method is a special method for creating and initializing objects created with a class.\r 3. Class Methods: Methods can be added to a class, and instances of the class can call these methods.\r 4. Class Inheritance: You can use the `extends` keyword to create a subclass that inherits from a superclass.\r 5. Static Methods: Static methods are defined on the class itself, not on the instances. They are called on the class rather than on instances of the class.\r 6. Getter and Setter Methods: You can use getter and setter methods to control access to the properties of an object.",
  "main": "0-classroom.js",
  "scripts": {
    
    "dev": "node 0-main.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
